<?phpnamespace app\api\model;use think\Model;class Order extends Model{    //protected $hidden = ['id'];    //获取需支付的订单    public static function getPayOrder($order_id)    {        $Order = Order::where('order_id', '=', $order_id)            ->find();        return $Order;    }    // 关联商品表    public function products()    {        return $this->belongsTo('Product', 'product_id', 'id');    }    // 关联商品表    public function shops()    {        return $this->belongsTo('Shop', 'shop_id', 'shop_id');    }    // 关联用户表    public function users()    {        return $this->belongsTo('Userinfo', 'user_id', 'user_id');    }    // 关联骑手信息表    public function shopers()    {        return $this->belongsTo('Shoperinfo', 'shoper_id', 'sid');    }    // 过去已经完成的订单    public static function getPastOrdersByShoperID($shoper_id)    {        $orders = self::where('shoper_id', $shoper_id)//            ->whereIn('order_status',['3,4'])         // 订单状态在某一范围内            ->whereIn('order_status', ['4','5'])//  4为已收货待评价            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->select();        return $orders;    }    // 实时订单    public static function getPresentOrdersByShoperID($shoper_id)    {        $orders = self::where('shoper_id', $shoper_id)            ->whereIn('order_status', 3)            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->select();        return $orders;    }    public static function getOrderOfShoperID($shoper_id, $id)    {        $orders = self::where('shoper_id', $shoper_id)            ->where('id', $id)//  4为已收货待评价            ->whereIn('order_status', ['3,2'])// 订单状态在某一范围内            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->find();        return $orders;    }    // // 获取普通用户所有订单    public static function getOrdersByUserID($user_id)    {//            ->whereIn('order_status',['3,2'])         // 订单状态在某一范围内//            ->where('order_status',4)         //  4为已收货待评价        $orders = self::where('user_id', $user_id)            ->where('is_business',0)			->whereIn('order_status',['3','2','1','4','5'])             ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->select();        return $orders;    }    // // 获取普通用户某个状态下的所有订单    public static function getOrdersByStatus($user_id,$status)    {        $orders = self::where('user_id', $user_id)            ->where('order_status',$status)            ->where('is_business',0)            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->select();        return $orders;    }    // // 获取企业用户所有订单    public static function getBusinessOrdersByUserID($user_id)//,$id)    {//            ->whereIn('order_status',['3,2'])         // 订单状态在某一范围内//            ->where('order_status',4)         //  4为已收货待评价        $orders = self::where('user_id', $user_id)            ->where('is_business',1)            ->whereIn('order_status',['3','2','1','4','5'])             ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->select();        return $orders;    }    // 获取企业用户某个状态下的所有订单    public static function getBusinessOrdersByStatus($user_id,$status)    {        $orders = self::where('user_id', $user_id)            ->where('order_status',$status)            ->where('is_business',1)            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->select();        return $orders;    }    // 获取企业用户某个状态下的所有订单    public static function getBusinessCompleteOrders($user_id)    {        $orders = self::where('user_id', $user_id)            ->whereIn('order_status',['4','5'])            ->where('is_business',1)            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->select();        return $orders;    }    // // 获取个人用户某个状态下的所有订单    public static function getCompleteOrders($user_id)    {        $orders = self::where('user_id', $user_id)            ->whereIn('order_status',['4','5'])            ->where('is_business',0)            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->select();        return $orders;    }    // 获取普通用户某一具体订单根据用户ID    public static function getOrdersOfUser($id)    {        $orders = self::where('id', $id)            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->find();        return $orders;    }    // 获取普通用户某一具体订单根据用户ID和订单ID    public static function getOrdersUserID($user_id,$id)    {        $orders = self::where('id', $id)            ->where('user_id',$user_id)            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->find();        return $orders;    }    // 获取商家订单所有订单    public static function getShopOrdersByUserID($shop_id)    {        $orders = self::where('shop_id', $shop_id)            ->whereIn('order_status',['2','3','4','5'])            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->select();        return $orders;    }    // 获取商家订单实时未发货的订单    public static function getShopPresentOrders($shop_id)    {        $orders = self::where('shop_id', $shop_id)            ->where('order_status',2)            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->select();        return $orders;    }    // 获取商家订单过去的的订单    public static function getShopPastOrders($shop_id)    {        $orders = self::where('shop_id', $shop_id)            ->whereIn('order_status',[4,5])            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->select();        return $orders;    }    // 获取商家订单某一具体订单    public static function getShopOrderOne($shop_id,$id)    {        $orders = self::where('shop_id', $shop_id)            ->where('id',$id)            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->order('o_builddate','desc')            ->select();        return $orders;    }    // 获取骑手订单某一具体订单    public static function getShoperOrderOne($shoper_id, $id)    {        $order = self::where('shoper_id', $shoper_id)            ->where('id', $id)            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->find();        return $order;    }    //获取本月个月某用户的订单    // 获取骑手订单某一具体订单    public static function getMonthOrder($user_id,$is_business)    {        $count = self::where('user_id', $user_id)            ->whereTime('o_builddate', 'm')            ->whereIn('order_status', ['2','3','4','5'])            ->where('is_business',$is_business)            ->count();        return $count;    }    // 获取详细订单信息 根据订单ID    public static function getDetailOrder($id)    {        $order = self::where('order_id', $id)            ->with('products')            ->with('users')            ->with('shopers')            ->with('shops')            ->find();        return $order;    }}